<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Utah Topography Calculator</title> {/* Changed */}
    <style>
        /* Basic Styles */
        body { font-family: sans-serif; padding: 20px; background-color: #f4f4f4; }
        .calculator { background-color: #fff; padding: 30px; border-radius: 8px; box-shadow: 0 2px 5px rgba(0,0,0,0.1); max-width: 500px; margin: auto; }
        .logo-image { display: block; margin-left: auto; margin-right: auto; max-width: 280px; height: auto; margin-bottom: 25px; }
        .form-group { margin-bottom: 20px; }
        label { display: block; margin-bottom: 8px; font-weight: bold; }
        input[type="number"], input[type="radio"], input[type="range"], button { padding: 10px; margin-bottom: 5px; border: 1px solid #ccc; border-radius: 4px; width: 95%; box-sizing: border-box; font-size: 1em; }
        input[type="radio"] { width: auto; margin-right: 5px; vertical-align: middle; padding: 0; margin-bottom: 0; }
        .inline-label { display: inline-block; font-weight: normal; margin-bottom: 10px; margin-right: 15px; }
        input[type="range"] { width: calc(85% - 60px); vertical-align: middle; margin-right: 10px; }
        button { background-color: #ed2025; color: white; border: none; cursor: pointer; font-size: 16px; transition: background-color 0.3s ease; width: 100%; }
        button:hover { background-color: #c41a1e; }
        #result { margin-top: 25px; font-size: 1.5em; font-weight: bold; text-align: center; padding: 15px; background-color: #e9ecef; border-radius: 4px; min-height: 1.5em; }
        .value-display { display: inline-block; font-weight: bold; min-width: 40px; text-align: right; }
    </style>
</head>
<body>

<div class="calculator">
    <img src="https://www.diamondlandsurveying.com/wp-content/uploads/2019/01/logo-1.png" alt="Diamond Land Surveying Logo" class="logo-image">
    <h2>Utah Topography Calculator</h2> {/* Changed */}

    <div class="form-group">
        <label for="acreage">Acreage:</label>
        <input type="number" id="acreage" name="acreage" min="0" step="0.01" value="0" placeholder="e.g., 5.25" required>
    </div>
    <div class="form-group">
        <label for="vegetation">High Vegetation Percentage:</label>
        <input type="range" id="vegetation" name="vegetation" min="0" max="10" value="0" step="1">
        <span id="vegetationValue" class="value-display">0%</span>
    </div>
    <div class="form-group">
        <label for="improved">Improved Percentage:</label>
        <input type="range" id="improved" name="improved" min="0" max="10" value="0" step="1">
        <span id="improvedValue" class="value-display">0%</span>
    </div>
     <div class="form-group">
        <label for="distance">Distance From Office (Miles):</label>
        <input type="number" id="distance" name="distance" min="0" step="1" value="0" placeholder="e.g., 50">
    </div>
    <div class="form-group">
        <label>Service Area:</label>
        <input type="radio" id="areaGreen" name="serviceArea" checked>
        <label for="areaGreen" class="inline-label">Green</label>
        <input type="radio" id="areaYellow" name="serviceArea">
        <label for="areaYellow" class="inline-label">Yellow</label>
        <input type="radio" id="areaRed" name="serviceArea">
        <label for="areaRed" class="inline-label">Red</label>
    </div>

    <button type="button" onclick="calculateBid()">Calculate Bid</button>
    <div id="result"> Your estimated bid cost will appear here. </div>
</div>

<script>
    // --- UTAH CONFIGURATION CONSTANTS ---
    // !!! Update these values for Utah pricing !!!
    const UT_BASE_COST_TOPOGRAPHY = 2000;
    const UT_RATE_ACRE_TOPOGRAPHY = 500;
    const UT_FACTOR_VEGETATION = 0.03; // Example UT value (3%)
    const UT_FACTOR_IMPROVED = 0.03; // Assumed same as Vegetation - UPDATE IF NEEDED
    const UT_RATE_DISTANCE = 0.20; // Assumed same rate - UPDATE IF NEEDED
    const UT_MULTIPLIER_SERVICE_GREEN = 1.0;
    const UT_MULTIPLIER_SERVICE_YELLOW = 1.15; // Example UT value
    const UT_MULTIPLIER_SERVICE_RED = 1.30; // Example UT value

    // --- Get References to Elements ---
    const acreageInput = document.getElementById('acreage');
    const vegetationSlider = document.getElementById('vegetation');
    const vegetationValueDisplay = document.getElementById('vegetationValue');
    const improvedSlider = document.getElementById('improved');
    const improvedValueDisplay = document.getElementById('improvedValue');
    const distanceInput = document.getElementById('distance');
    const resultDiv = document.getElementById('result');

    // --- Event Listeners ---
    vegetationSlider.oninput = function() { vegetationValueDisplay.textContent = `${this.value * 10}%`; }
    improvedSlider.oninput = function() { improvedValueDisplay.textContent = `${this.value * 10}%`; }

    // --- Main Calculation Function ---
    function calculateBid() {
        // 1. Get Base Values & Validate Inputs
        const baseCost = UT_BASE_COST_TOPOGRAPHY;
        const acreageRate = UT_RATE_ACRE_TOPOGRAPHY;

        const acreage = parseFloat(acreageInput.value);
        const vegetationSliderValue = parseInt(vegetationSlider.value);
        const improvedSliderValue = parseInt(improvedSlider.value);
        const distance = parseFloat(distanceInput.value);

        if (isNaN(acreage) || acreage < 0) { resultDiv.innerText = "Invalid acreage..."; acreageInput.focus(); return; }
        if (isNaN(distance) || distance < 0) { resultDiv.innerText = "Invalid distance..."; distanceInput.focus(); return; }

        // 2. Calculate Base Subtotal
        const acreageFee = acreageRate * acreage;
        const baseSubtotal = baseCost + acreageFee;

        // 3. Calculate Add-ons (using UT constants)
        const vegetationAddOn = baseSubtotal * (vegetationSliderValue * UT_FACTOR_VEGETATION);
        const improvedAddOn = baseSubtotal * (improvedSliderValue * UT_FACTOR_IMPROVED);
        const distanceCost = distance * UT_RATE_DISTANCE;

        // 4. Determine Service Area Multiplier (using UT constants)
        let serviceAreaMultiplier = UT_MULTIPLIER_SERVICE_GREEN;
        const serviceAreaElement = document.querySelector('input[name="serviceArea"]:checked');
        if (serviceAreaElement) {
            switch (serviceAreaElement.id) {
                case 'areaYellow': serviceAreaMultiplier = UT_MULTIPLIER_SERVICE_YELLOW; break;
                case 'areaRed': serviceAreaMultiplier = UT_MULTIPLIER_SERVICE_RED; break;
            }
        }

        // 5. Calculate Final Cost
        const adjustedSubtotal = baseSubtotal + vegetationAddOn + improvedAddOn + distanceCost;
        const finalBidCost = adjustedSubtotal * serviceAreaMultiplier;

        // --- Display Result ---
        const formattedCost = finalBidCost.toLocaleString('en-US', { style: 'currency', currency: 'USD' });
        resultDiv.innerText = `Estimated Bid Cost: ${formattedCost}`;
    }

    // --- Initial Setup ---
    vegetationValueDisplay.textContent = `${vegetationSlider.value * 10}%`;
    improvedValueDisplay.textContent = `${improvedSlider.value * 10}%`;

</script>
</body>
</html>